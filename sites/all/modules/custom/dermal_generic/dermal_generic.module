<?php

/**
 * Implements hook_field_formatter_info().
 */
function dermal_generic_field_formatter_info() {
  $info = [
    'bhfivestar' => [
      'label' => t('BH Fivestar'),
      'field types' => ['text_long'],
      'description' => t('Show as the BH Review block'),
    ],
    'bhrate_to_fivestar' => [
      'label' => t('BH Fivestar from rate'),
      'field types' => ['number_integer'],
      'description' => t('Custom BH Review block'),
    ],
  ];

  return $info;
}

/**
 * Implements hook_field_formatter_view().
 */
function dermal_generic_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];

  switch ($display['type']) {
    case 'bhfivestar':
      $text_long = reset($items);
      if (!empty($text_long['value'])) {
        $bh_logo = drupal_get_path('module', 'dermal_generic') . '/img/beauty_review_logo.png';
        if (!empty($entity->field_beauty_review_link[LANGUAGE_NONE][0]['url'])) {
          $url = $entity->field_beauty_review_link[LANGUAGE_NONE][0]['url'];
          $markup = "
            <div class='bhrating'>
              <a href='{$url}' target='_blank'>
                <div class='left'><img src='/{$bh_logo}'/></div>
                <div class='right'>{$text_long['value']}</div>
              </a>
            </div>";
        }
        else {
          $markup = "
            <div class='bhrating'>
              <div class='left'><img src='/{$bh_logo}'/></div>
              <div class='right'>{$text_long['value']}</div>
            </div>";
        }
        $element[0] = [
          '#markup' => $markup,
        ];
      }
      break;

    case 'bhrate_to_fivestar':
      $rate = reset($items);
      if (!empty($rate['value'])) {
        $element[0] = [
          '#markup' => "
<div class='product-average-rating'>
  <div class='review-result'>Rated {$rate['value']}/5 stars</div>
  <div class='fivestar-bh stars large'>
    <div class='fivestar-widget-static fivestar-widget-static-vote fivestar-widget-static-5 clearfix'>
      <div class='star star-1 star-odd star-first'><span class='on'>{$rate['value']}</span></div>
      <div class='star star-2 star-even'><span class='on'></span></div>
      <div class='star star-3 star-odd'><span class='on'></span></div>
      <div class='star star-4 star-even'><span class='on'></span></div>
      <div class='star star-5 star-odd star-last'><span class='on'></span></div>
    </div>
  </div>
  <div class='review-info'>by beauty heaven members</div>
</div>",
        ];
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_cron()
 *
 * @throws \Exception
 */
function dermal_generic_cron() {
  watchdog(WATCHDOG_ALERT, 'SYNC Beatury Heaven Reviews');

  $nids = db_select('node', 'n')
    ->fields('n', ['nid'])
    ->fields('n', ['type'])
    ->condition('n.type', 'product')
    ->execute()
    ->fetchCol();
  $nodes = node_load_multiple($nids);
  $count = 0;
  foreach ($nodes as $node) {
    if (isset($node->field_beauty_review_link[LANGUAGE_NONE])) {
      $curl = curl_init($node->field_beauty_review_link[LANGUAGE_NONE][0]['url']);
      curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
      curl_setopt($curl, CURLOPT_FOLLOWLOCATION, TRUE);
      curl_setopt($curl, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.224 Safari/534.10');
      $html = curl_exec($curl);
      curl_close($curl);

      $dom = new DOMDocument();
      @$dom->loadHTML($html);
      $xpath = new DOMXPath($dom);
      $rating = $xpath->query("//div[contains(@class,'product-average-rating')]");
      if ($rating->length === 1) {
        $count++;
        $rating_block = $dom->saveHTML($rating->item(0));
//        $node->field_beauty_review_data[LANGUAGE_NONE][0]['value'] = $rating_block;
//        $node->field_beauty_review_data[LANGUAGE_NONE][0]['#format'] = 'php_code';
//        node_save($node);

        $node_wrapper = entity_metadata_wrapper('node', $node);
        $node_wrapper->field_beauty_review_data->value = $rating_block;
        $node_wrapper->field_beauty_review_data->format = 'filtered_html';
        $node_wrapper->save();
      }
    }
  }

  watchdog(WATCHDOG_ALERT, "Added/updated {$count} reviews");
}

/**
 * Implements hook_node_presave().
 *
 * @param $node
 */
function dermal_generic_node_presave($node) {
  global $user;
  if ($node->type == 'product' && !empty($node->nid) && !empty($user->uid)) {
    $node->field_beauty_review_data = $node->original->field_beauty_review_data;
  }
}

/**
 * Implements hook_ds_pre_render_alter()
 *
 * @param $layout_render_array
 * @param $context
 * @param $vars
 */
function dermal_generic_ds_pre_render_alter(&$layout_render_array, $context, &$vars) {
  if ($context['entity_type'] == 'node' && $context['entity']->type == 'product') {
    $current = domain_get_domain();
    if ($current['machine_name'] == 'australia_dt') {
      $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'beautyheaven_review')
        ->fieldCondition('field_product', 'value', $context["entity"]->nid)
        ->addMetaData('account', user_load(1));
      $result = $query->execute();

      $reviews = [];
      $rate_total = 0;
      $rate_count = 0;
      $rate_best = 0;
      if (isset($result['node'])) {
        $nids = array_keys($result['node']);
        $review_nodes = entity_load('node', $nids);
        foreach ($review_nodes as $node) {
          $rate = $node->field_rate[LANGUAGE_NONE][0]['value'];
          $rate_total += $rate;
          $rate_count++;
          $rate_best = ($rate_best < $rate) ? $rate : $rate_best;
          $reviews[] = [
            '@type' => 'Review',
            'author' => $node->field_author[LANGUAGE_NONE][0]['value'],
            'datePublished' => $node->field_review_date[LANGUAGE_NONE][0]['value'],
            'description' => $node->body[LANGUAGE_NONE][0]['value'],
            'name' => $node->title,
            'reviewRating' => [
              '@type'=> 'Rating',
              'bestRating'=> '5',
              'ratingValue'=> $rate,
              'worstRating'=> '1'
            ]
          ];
        }
      }

      $image = image_style_url('width_250', $context['entity']->field_product_image['und'][0]['uri']);
      $description = strip_tags($context['entity']->field_product_information['und'][0]['value']);
      $aggregate_rating = empty($rate_count) ? '' : '
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "' . number_format($rate_total/$rate_count, 1) . '",
          "bestRating": "' . $rate_best . '",
          "ratingCount": "' . $rate_count . '"
        },';
      $data = [
        '#type' => 'markup',
        '#markup' => '<script type="application/ld+json">
{
  "@context": "https://schema.org/",
  "@type": "Product",
  "name": "' . $context["entity"]->title . '",
  "image": [
    "' . $image . '"
   ],
  "description": "' . $description . '",
  "mpn": "925872",
  "brand": {
    "@type": "Thing",
    "name": "Dermal Therapy"
  },
  "review": ' . json_encode($reviews) . ',' . $aggregate_rating .
  '"url": "' . url("/node/{$context["entity"]->nid}") . '"
}
</script>',
      ];

//      $layout_render_array['left'][] = $data;

      if (!empty($rate_count)) {
        $rating = empty($rate_count) ? '' : '
          <span itemprop="ratingValue">' . number_format($rate_total/$rate_count, 1) . '</span> out of <span itemprop="bestRating">' . $rate_best . '</span> by <span itemprop="reviewCount">' . $rate_count . '</span> customers.';
          $snippet =  [
            '#type' => 'markup',
            '#markup' =>'<span style="display: none" itemscope itemtype="http://schema.org/Product">
            <span itemprop="name">' . $context['entity']->title . '</span> is <span itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
              <a href="' . $context['entity']->field_beauty_review_link[LANGUAGE_NONE][0]['url'] . '" target="_blank">rated</a>' .
              $rating .
            '</span>
          </span>'];

//        $layout_render_array['left'][] = $snippet;
      }
    }
  }
}
