diff --git a/sites/all/modules/contrib/rules/ui/ui.core.inc b/sites/all/modules/contrib/rules/ui/ui.core.inc
index a51c6af..d46e1b0 100644
--- a/sites/all/modules/contrib/rules/ui/ui.core.inc
+++ b/sites/all/modules/contrib/rules/ui/ui.core.inc
@@ -199,7 +199,7 @@ class RulesPluginUI extends FacesExtender implements RulesPluginUIInterface {
    * Note: Make sure that you set RulesPluginUI::$basePath before using this
    * method, otherwise paths, links, redirects etc. won't be correct.
    */
-  public function form(&$form, &$form_state, $options = array()) {
+  public function form(&$form, &$form_state, $options = array(), $iterator = NULL) {
     self::formDefaults($form, $form_state);
     $form_state += array('rules_element' => $this->element);
 
@@ -890,7 +890,7 @@ class RulesAbstractPluginUI extends RulesPluginUI {
    * Overridden to invoke the abstract plugins form alter callback and to add
    * the negation checkbox for conditions.
    */
-  public function form(&$form, &$form_state, $options = array()) {
+  public function form(&$form, &$form_state, $options = array(), $iterator = NULL) {
     parent::form($form, $form_state, $options);
 
     if ($this->element instanceof RulesCondition) {
diff --git a/sites/all/modules/contrib/rules/ui/ui.plugins.inc b/sites/all/modules/contrib/rules/ui/ui.plugins.inc
index 1450c10..1169afa 100644
--- a/sites/all/modules/contrib/rules/ui/ui.plugins.inc
+++ b/sites/all/modules/contrib/rules/ui/ui.plugins.inc
@@ -17,7 +17,7 @@ class RulesRuleUI extends RulesActionContainerUI {
     $this->conditions = $this->rule->conditionContainer();
   }
 
-  public function form(&$form, &$form_state, $options = array()) {
+  public function form(&$form, &$form_state, $options = array(), $iterator = NULL) {
     $form_state['rules_element'] = $this->rule;
     $label = $this->element->label();
     // Automatically add a counter to unlabelled rules.
@@ -84,7 +84,7 @@ class RulesRuleUI extends RulesActionContainerUI {
  */
 class RulesReactionRuleUI extends RulesRuleUI {
 
-  public function form(&$form, &$form_state, $options = array()) {
+  public function form(&$form, &$form_state, $options = array(), $iterator = NULL) {
     $form['events'] = array(
       '#type' => 'container',
       '#weight' => -10,
@@ -193,7 +193,7 @@ class RulesRuleSetUI extends RulesActionContainerUI {
  */
 class RulesLoopUI extends RulesActionContainerUI {
 
-  public function form(&$form, &$form_state, $options = array()) {
+  public function form(&$form, &$form_state, $options = array(), $iterator = NULL) {
     parent::form($form, $form_state, $options);
     $settings = $this->element->settings;
 
